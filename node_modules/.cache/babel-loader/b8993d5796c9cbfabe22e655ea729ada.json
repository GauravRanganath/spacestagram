{"ast":null,"code":"var _jsxFileName = \"/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Button, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultEndDate.setDate(defaultEndDate.getDate() - 5);\n  let defaultStartDateArr = defaultStartDate.toISOString().slice(0, 10).split(\"-\");\n  let formatDefaultStartDate = defaultStartDateArr[2] + \"-\" + defaultStartDateArr[1] + \"-\" + defaultStartDateArr[0];\n  let defaultEndDateArr = defaultEndDate.toISOString().slice(0, 10).split(\"-\");\n  let formatDefaultEndDate = defaultEndDateArr[2] + \"-\" + defaultEndDateArr[1] + \"-\" + defaultEndDateArr[0];\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(defaultStartDate);\n  const [endDate, setAPODEndDate] = useState(defaultEndDate);\n  let apodCall = \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" + formatDefaultStartDate + \"&end_date=\" + formatDefaultEndDate;\n  useEffect(() => {\n    Axios.get(apodCall).then(response => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, []);\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map(data => /*#__PURE__*/_jsxDEV(Post, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const SelectStartDate = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => setAPODStartDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: date => setAPODEndDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Select Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [SelectStartDate(), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: renderPosts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cGwW9yPNcrLugEQyznegbNruFss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js"],"names":["Container","Button","CircularProgress","React","useState","useEffect","Axios","Post","DatePicker","App","defaultStartDate","Date","defaultEndDate","setDate","getDate","defaultStartDateArr","toISOString","slice","split","formatDefaultStartDate","defaultEndDateArr","formatDefaultEndDate","APOD","setAPOD","startDate","setAPODStartDate","endDate","setAPODEndDate","apodCall","get","then","response","console","log","data","renderPosts","length","map","SelectStartDate","date"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,gBAA5B,QAAoD,eAApD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,MAAIC,gBAAgB,GAAG,IAAIC,IAAJ,EAAvB;AACA,MAAIC,cAAc,GAAG,IAAID,IAAJ,EAArB;AACAC,EAAAA,cAAc,CAACC,OAAf,CAAuBD,cAAc,CAACE,OAAf,KAA2B,CAAlD;AAEA,MAAIC,mBAAmB,GAAGL,gBAAgB,CACvCM,WADuB,GAEvBC,KAFuB,CAEjB,CAFiB,EAEd,EAFc,EAGvBC,KAHuB,CAGjB,GAHiB,CAA1B;AAIA,MAAIC,sBAAsB,GACxBJ,mBAAmB,CAAC,CAAD,CAAnB,GACA,GADA,GAEAA,mBAAmB,CAAC,CAAD,CAFnB,GAGA,GAHA,GAIAA,mBAAmB,CAAC,CAAD,CALrB;AAOA,MAAIK,iBAAiB,GAAGR,cAAc,CAACI,WAAf,GAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,EAAtC,EAA0CC,KAA1C,CAAgD,GAAhD,CAAxB;AACA,MAAIG,oBAAoB,GACtBD,iBAAiB,CAAC,CAAD,CAAjB,GACA,GADA,GAEAA,iBAAiB,CAAC,CAAD,CAFjB,GAGA,GAHA,GAIAA,iBAAiB,CAAC,CAAD,CALnB;AAOA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,SAAD,EAAYC,gBAAZ,IAAgCrB,QAAQ,CAACM,gBAAD,CAA9C;AACA,QAAM,CAACgB,OAAD,EAAUC,cAAV,IAA4BvB,QAAQ,CAACQ,cAAD,CAA1C;AAEA,MAAIgB,QAAQ,GACV,qGACAT,sBADA,GAEA,YAFA,GAGAE,oBAJF;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACuB,GAAN,CAAUD,QAAV,EAAoBE,IAApB,CAA0BC,QAAD,IAAc;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAX,MAAAA,OAAO,CAACQ,QAAQ,CAACG,IAAV,CAAP;AACD,KAHD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIb,IAAI,CAACc,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOd,IAAI,CAACe,GAAL,CAAUH,IAAD,iBAAU,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAnB,CAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAND;;AAQA,QAAMI,eAAe,GAAG,MAAM;AAC5B,wBACE;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAEd,SADZ;AAEE,QAAA,QAAQ,EAAGe,IAAD,IAAUd,gBAAgB,CAACc,IAAD;AAFtC;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAEb,OADZ;AAEE,QAAA,QAAQ,EAAGa,IAAD,IAAUZ,cAAc,CAACY,IAAD;AAFpC;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGD,eAAe,EADlB,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,gBAA0BH,WAAW;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvEQ1B,G;;KAAAA,G;AAyET,eAAeA,GAAf","sourcesContent":["import { Container, Button, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultEndDate.setDate(defaultEndDate.getDate() - 5);\n\n  let defaultStartDateArr = defaultStartDate\n    .toISOString()\n    .slice(0, 10)\n    .split(\"-\");\n  let formatDefaultStartDate =\n    defaultStartDateArr[2] +\n    \"-\" +\n    defaultStartDateArr[1] +\n    \"-\" +\n    defaultStartDateArr[0];\n\n  let defaultEndDateArr = defaultEndDate.toISOString().slice(0, 10).split(\"-\");\n  let formatDefaultEndDate =\n    defaultEndDateArr[2] +\n    \"-\" +\n    defaultEndDateArr[1] +\n    \"-\" +\n    defaultEndDateArr[0];\n\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(defaultStartDate);\n  const [endDate, setAPODEndDate] = useState(defaultEndDate);\n\n  let apodCall =\n    \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" +\n    formatDefaultStartDate +\n    \"&end_date=\" +\n    formatDefaultEndDate;\n\n  useEffect(() => {\n    Axios.get(apodCall).then((response) => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, []);\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map((data) => <Post data={data}></Post>);\n    } else {\n      return <CircularProgress />;\n    }\n  };\n\n  const SelectStartDate = () => {\n    return (\n      <div>\n        <DatePicker\n          selected={startDate}\n          onChange={(date) => setAPODStartDate(date)}\n        />\n        <DatePicker\n          selected={endDate}\n          onChange={(date) => setAPODEndDate(date)}\n        />\n        <Button variant=\"contained\">Select Date</Button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {SelectStartDate()}\n      <Container maxWidth=\"sm\">{renderPosts()}</Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}