{"ast":null,"code":"var _jsxFileName = \"/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Container, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultStartDate.setDate(defaultStartDate.getDate() - 5);\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(defaultStartDate);\n  const [endDate, setAPODEndDate] = useState(defaultEndDate);\n  let apodCall = \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" + startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate() + \"&end_date=\" + endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n  console.log(apodCall);\n  console.log(startDate);\n  console.log(endDate);\n  useEffect(() => {\n    Axios.get(apodCall).then(response => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, [apodCall]);\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map(data => /*#__PURE__*/_jsxDEV(Post, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const SelectStartDate = () => {\n    const selectNewStartDate = date => {\n      setAPODStartDate(date);\n      setAPOD([]);\n    };\n\n    const selectNewEndDate = date => {\n      setAPODEndDate(date);\n      setAPOD([]);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => selectNewStartDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: date => selectNewEndDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"about\",\n          element: /*#__PURE__*/_jsxDEV(Post, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [SelectStartDate(), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: renderPosts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"cGwW9yPNcrLugEQyznegbNruFss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js"],"names":["Container","CircularProgress","React","useState","useEffect","Routes","Route","Link","Axios","Post","DatePicker","App","defaultStartDate","Date","defaultEndDate","setDate","getDate","APOD","setAPOD","startDate","setAPODStartDate","endDate","setAPODEndDate","apodCall","getFullYear","getMonth","console","log","get","then","response","data","renderPosts","length","map","SelectStartDate","selectNewStartDate","date","selectNewEndDate"],"mappings":"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","sourcesContent":["import { Container, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultStartDate.setDate(defaultStartDate.getDate() - 5);\n\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(defaultStartDate);\n  const [endDate, setAPODEndDate] = useState(defaultEndDate);\n\n  let apodCall =\n    \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" +\n    startDate.getFullYear() +\n    \"-\" +\n    (startDate.getMonth() + 1) +\n    \"-\" +\n    startDate.getDate() +\n    \"&end_date=\" +\n    endDate.getFullYear() +\n    \"-\" +\n    (endDate.getMonth() + 1) +\n    \"-\" +\n    endDate.getDate();\n\n  console.log(apodCall);\n  console.log(startDate);\n  console.log(endDate);\n\n  useEffect(() => {\n    Axios.get(apodCall).then((response) => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, [apodCall]);\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map((data) => <Post data={data}></Post>);\n    } else {\n      return <CircularProgress />;\n    }\n  };\n\n  const SelectStartDate = () => {\n    const selectNewStartDate = (date) => {\n      setAPODStartDate(date);\n      setAPOD([]);\n    };\n\n    const selectNewEndDate = (date) => {\n      setAPODEndDate(date);\n      setAPOD([]);\n    };\n\n    return (\n      <div>\n        <DatePicker\n          selected={startDate}\n          onChange={(date) => selectNewStartDate(date)}\n        />\n        <DatePicker\n          selected={endDate}\n          onChange={(date) => selectNewEndDate(date)}\n        />\n        <Routes>\n          <Route path=\"about\" element={<Post />} />\n        </Routes>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {SelectStartDate()}\n      <Container maxWidth=\"sm\">{renderPosts()}</Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}