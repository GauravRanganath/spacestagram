{"ast":null,"code":"var _jsxFileName = \"/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Container, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link, useParams } from \"react-router-dom\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultStartDate.setDate(defaultStartDate.getDate() - 5);\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(defaultStartDate);\n  const [endDate, setAPODEndDate] = useState(defaultEndDate);\n  const [user, setUser] = React.useState(null);\n  const {\n    handle\n  } = useParams();\n  let apodCall = \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" + startDate.getFullYear() + \"-\" + (startDate.getMonth() + 1) + \"-\" + startDate.getDate() + \"&end_date=\" + endDate.getFullYear() + \"-\" + (endDate.getMonth() + 1) + \"-\" + endDate.getDate();\n  console.log(apodCall);\n  console.log(startDate);\n  console.log(endDate);\n  useEffect(() => {\n    Axios.get(apodCall).then(response => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, [apodCall]);\n\n  function getDate(handle) {// `handle` is a placeholder\n    // for when `getProfile` is invoked\n  }\n\n  useEffect(() => {\n    getDate(handle).then(setUser);\n  }, [handle]);\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map(data => /*#__PURE__*/_jsxDEV(Post, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const SelectStartDate = () => {\n    const selectNewStartDate = date => {\n      setAPODStartDate(date);\n      setAPOD([]);\n    };\n\n    const selectNewEndDate = date => {\n      setAPODEndDate(date);\n      setAPOD([]);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate,\n        onChange: date => selectNewStartDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate,\n        onChange: date => selectNewEndDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Home = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [SelectStartDate(), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: renderPosts()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n\n  const PostPage = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Who are we?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"That feels like an existential question, don't you think?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"post\",\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \":postDate\",\n        element: /*#__PURE__*/_jsxDEV(PostPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4MrReXrDlDqx/lnekzbZzbqsQLc=\", false, function () {\n  return [useParams];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js"],"names":["Container","CircularProgress","React","useState","useEffect","Routes","Route","Link","useParams","Axios","Post","DatePicker","App","defaultStartDate","Date","defaultEndDate","setDate","getDate","APOD","setAPOD","startDate","setAPODStartDate","endDate","setAPODEndDate","user","setUser","handle","apodCall","getFullYear","getMonth","console","log","get","then","response","data","renderPosts","length","map","SelectStartDate","selectNewStartDate","date","selectNewEndDate","Home","PostPage"],"mappings":"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","sourcesContent":["import { Container, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link, useParams } from \"react-router-dom\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultStartDate.setDate(defaultStartDate.getDate() - 5);\n\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(defaultStartDate);\n  const [endDate, setAPODEndDate] = useState(defaultEndDate);\n  const [user, setUser] = React.useState(null)\n\n  const { handle } = useParams()\n\n  let apodCall =\n    \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" +\n    startDate.getFullYear() +\n    \"-\" +\n    (startDate.getMonth() + 1) +\n    \"-\" +\n    startDate.getDate() +\n    \"&end_date=\" +\n    endDate.getFullYear() +\n    \"-\" +\n    (endDate.getMonth() + 1) +\n    \"-\" +\n    endDate.getDate();\n\n  console.log(apodCall);\n  console.log(startDate);\n  console.log(endDate);\n\n  useEffect(() => {\n    Axios.get(apodCall).then((response) => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, [apodCall]);\n\n  function getDate (handle) {\n    // `handle` is a placeholder\n    // for when `getProfile` is invoked\n  }\n\n  useEffect(() => {\n    getDate(handle)\n      .then(setUser)\n  }, [handle])\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map((data) => <Post data={data}></Post>);\n    } else {\n      return <CircularProgress />;\n    }\n  };\n\n  const SelectStartDate = () => {\n    const selectNewStartDate = (date) => {\n      setAPODStartDate(date);\n      setAPOD([]);\n    };\n\n    const selectNewEndDate = (date) => {\n      setAPODEndDate(date);\n      setAPOD([]);\n    };\n\n    return (\n      <div>\n        <DatePicker\n          selected={startDate}\n          onChange={(date) => selectNewStartDate(date)}\n        />\n        <DatePicker\n          selected={endDate}\n          onChange={(date) => selectNewEndDate(date)}\n        />\n      </div>\n    );\n  };\n\n  const Home = () => {\n    return (\n      <div className=\"App\">\n        {SelectStartDate()}\n        <Container maxWidth=\"sm\">{renderPosts()}</Container>\n      </div>\n    );\n  }\n\n  const PostPage = () => {\n    return (\n      <>\n        <main>\n          <h2>Who are we?</h2>\n          <p>That feels like an existential question, don't you think?</p>\n        </main>\n        <nav>\n          <Link to=\"/\">Home</Link>\n        </nav>\n      </>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n      <Route path=\"post\" >\n        <Route path=\":postDate\" element={<PostPage />} />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}