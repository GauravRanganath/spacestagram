{"ast":null,"code":"var _jsxFileName = \"/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Button, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultStartDate.setDate(defaultStartDate.getDate() - 5);\n  let formatStartDate = defaultStartDate.toISOString().slice(0, 10);\n  let formatEndDate = defaultEndDate.toISOString().slice(0, 10);\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(formatStartDate);\n  const [endDate, setAPODEndDate] = useState(formatEndDate);\n  let apodCall = \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" + startDate + \"&end_date=\" + endDate;\n  console.log(apodCall);\n  useEffect(() => {\n    Axios.get(apodCall).then(response => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, [apodCall]);\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map(data => /*#__PURE__*/_jsxDEV(Post, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }, this));\n    } else {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const selectDateRange = () => {\n    console.log(startDate);\n  };\n\n  const SelectStartDate = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: startDate // onChange={(date) => setAPODStartDate(date.toISOString().slice(0, 10))}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: endDate // onChange={(date) => setAPODEndDate(date.toISOString().slice(0, 10))}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Select Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [SelectStartDate(), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: renderPosts()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"benzAWjnO2Agwvcs7/voL4IuHdM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gauravranganath/Desktop/Shopify Technical Challenge/spacestagram/src/App.js"],"names":["Container","Button","CircularProgress","React","useState","useEffect","Axios","Post","DatePicker","App","defaultStartDate","Date","defaultEndDate","setDate","getDate","formatStartDate","toISOString","slice","formatEndDate","APOD","setAPOD","startDate","setAPODStartDate","endDate","setAPODEndDate","apodCall","console","log","get","then","response","data","renderPosts","length","map","selectDateRange","SelectStartDate"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,gBAA5B,QAAoD,eAApD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,MAAIC,gBAAgB,GAAG,IAAIC,IAAJ,EAAvB;AACA,MAAIC,cAAc,GAAG,IAAID,IAAJ,EAArB;AACAD,EAAAA,gBAAgB,CAACG,OAAjB,CAAyBH,gBAAgB,CAACI,OAAjB,KAA6B,CAAtD;AAEA,MAAIC,eAAe,GAAGL,gBAAgB,CAACM,WAAjB,GAA+BC,KAA/B,CAAqC,CAArC,EAAwC,EAAxC,CAAtB;AACA,MAAIC,aAAa,GAAGN,cAAc,CAACI,WAAf,GAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,EAAtC,CAApB;AAEA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,SAAD,EAAYC,gBAAZ,IAAgClB,QAAQ,CAACW,eAAD,CAA9C;AACA,QAAM,CAACQ,OAAD,EAAUC,cAAV,IAA4BpB,QAAQ,CAACc,aAAD,CAA1C;AAEA,MAAIO,QAAQ,GACV,qGACAJ,SADA,GAEA,YAFA,GAGAE,OAJF;AAMAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEApB,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACsB,GAAN,CAAUH,QAAV,EAAoBI,IAApB,CAA0BC,QAAD,IAAc;AACrCJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAArB;AACAX,MAAAA,OAAO,CAACU,QAAQ,CAACC,IAAV,CAAP;AACD,KAHD;AAID,GALQ,EAKN,CAACN,QAAD,CALM,CAAT;;AAOA,QAAMO,WAAW,GAAG,MAAM;AACxB,QAAIb,IAAI,CAACc,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOd,IAAI,CAACe,GAAL,CAAUH,IAAD,iBAAU,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAAnB,CAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAND;;AAQA,QAAMI,eAAe,GAAG,MAAM;AAC5BT,IAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ;AACD,GAFD;;AAIA,QAAMe,eAAe,GAAG,MAAM;AAC5B,wBACE;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAEf,SADZ,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,UAAD;AACE,QAAA,QAAQ,EAAEE,OADZ,CAEE;;AAFF;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGa,eAAe,EADlB,eAEE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,gBAA0BJ,WAAW;AAArC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA9DQvB,G;;KAAAA,G;AAgET,eAAeA,GAAf","sourcesContent":["import { Container, Button, CircularProgress } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport Post from \"./components/Post\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n\n  let defaultStartDate = new Date();\n  let defaultEndDate = new Date();\n  defaultStartDate.setDate(defaultStartDate.getDate() - 5);\n\n  let formatStartDate = defaultStartDate.toISOString().slice(0, 10);\n  let formatEndDate = defaultEndDate.toISOString().slice(0, 10);\n\n  const [APOD, setAPOD] = useState([]);\n  const [startDate, setAPODStartDate] = useState(formatStartDate);\n  const [endDate, setAPODEndDate] = useState(formatEndDate);\n\n  let apodCall =\n    \"https://api.nasa.gov/planetary/apod?api_key=ge9zXukzme64aq3NwaMD4fVSNsNfu1R7cvsWVFq7&start_date=\" +\n    startDate +\n    \"&end_date=\" +\n    endDate;\n\n  console.log(apodCall)\n\n  useEffect(() => {\n    Axios.get(apodCall).then((response) => {\n      console.log(response.data);\n      setAPOD(response.data);\n    });\n  }, [apodCall]);\n\n  const renderPosts = () => {\n    if (APOD.length !== 0) {\n      return APOD.map((data) => <Post data={data}></Post>);\n    } else {\n      return <CircularProgress />;\n    }\n  };\n\n  const selectDateRange = () => {\n    console.log(startDate)\n  }\n\n  const SelectStartDate = () => {\n    return (\n      <div>\n        <DatePicker\n          selected={startDate}\n          // onChange={(date) => setAPODStartDate(date.toISOString().slice(0, 10))}\n        />\n        <DatePicker\n          selected={endDate}\n          // onChange={(date) => setAPODEndDate(date.toISOString().slice(0, 10))}\n        />\n        <Button variant=\"contained\">Select Date</Button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {SelectStartDate()}\n      <Container maxWidth=\"sm\">{renderPosts()}</Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}